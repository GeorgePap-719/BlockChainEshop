{"ast":null,"code":"var _jsxFileName = \"/home/geopapadopoulos/BlockChainTestsAndProjects/eshopBlockchain/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3'; //import logo from '../logo.png';\n//import './App.css';\n\nimport eShop from '../abis/eShop.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadweb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadweb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } // Non-dapp browsers...\n    else {\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3; //load accounts\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = eShop.networks[networkId];\n\n    if (networkData) {\n      const eshop = web3.eth.Contract(eShop.abi, networkData.address);\n      this.setState({\n        eshop\n      });\n      this.setState({\n        loading: false\n      });\n    } else {//  window.alert(\"eShop contract not deployed to detected network\")\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      role: \"main\",\n      className: \"col-lg-12 d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(Main, {\n      products: this.state.products,\n      createProduct: this.createProduct,\n      purchaseProduct: this.purchaseProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/geopapadopoulos/BlockChainTestsAndProjects/eshopBlockchain/src/components/App.js"],"names":["React","Component","Web3","eShop","Navbar","Main","App","componentWillMount","loadweb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","eshop","Contract","abi","address","loading","constructor","props","state","productCount","products","render","createProduct","purchaseProduct"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\n//import logo from '../logo.png';\n//import './App.css';\nimport eShop from '../abis/eShop.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadweb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadweb3() {\n\n      if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n      }\n      else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider)\n      }\n      // Non-dapp browsers...\n      else {\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n      }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    //load accounts\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkId = await web3.eth.net.getId()\n    const networkData = eShop.networks[networkId]\n\n    if(networkData) {\n      const eshop = web3.eth.Contract(eShop.abi, networkData.address)\n      this.setState({eshop})\n      this.setState({loading: false})\n    } else {\n    //  window.alert(\"eShop contract not deployed to detected network\")\n    }\n\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n            { this.state.loading\n               ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n               : <Main\n                 products={this.state.products}\n                 createProduct={this.createProduct}\n                 purchaseProduct={this.purchaseProduct} />\n             }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}